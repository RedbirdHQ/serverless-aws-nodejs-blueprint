service: serverless-aws-nodejs-blueprint

provider:
  name: aws
  runtime: nodejs6.10
  stage: ${self:custom.params.stage}
  region: ${self:custom.params.region}

plugins:
  - serverless-webpack
  - serverless-s3-local
  - serverless-dynamodb-local
  - serverless-dynamodb-autoscaling
  - serverless-offline

custom:
  params: ${file(./serverless.params.yml)}
  dynamodb:
    start:
      port: ${self:custom.params.local.dynamodb.port}
      migrate: true
      seed: true
    seed:
      users:
        sources:
          - table: users
            sources: [./data/users.json]
  s3:
    port: ${self:custom.params.local.s3.port}
  capacities:
    - table: UsersDynamoDBTable
      read:
        minimum: ${self:custom.params.capacities.users.read.minimum}
        maximum: ${self:custom.params.capacities.users.read.maximum}
        usage: ${self:custom.params.capacities.users.read.usage}
      write:
        minimum: ${self:custom.params.capacities.users.write.minimum}
        maximum: ${self:custom.params.capacities.users.write.maximum}
        usage: ${self:custom.params.capacities.users.write.usage}

functions:
  users:
    handler: src/functions/users/index.handler
    role: UsersRole
    integration: lambda
    events:
      - http:
          path: /users
          method: post
          integration: lambda
          request:
            template:
              application/json: ${file(./deployment/api/users-post-template.json)}

resources:
  Resources:
    UsersDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.params.capacities.users.read.default}
          WriteCapacityUnits: ${self:custom.params.capacities.users.write.default}
    UsersRole: ${file(./deployment/iam/users-role.yml)}
    LogsS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: logs
